/**
 *@Generated by sagacity-quickvo 4.13
 */
package com.sagframe.sqltoy.showcase.vo.base;

import java.io.Serializable;
import org.sagacity.sqltoy.config.annotation.Entity;
import org.sagacity.sqltoy.config.annotation.Id;
import org.sagacity.sqltoy.config.annotation.Column;
import java.time.LocalDateTime;
import java.time.LocalDate;


/**
 * @project sqltoy-showcase
 * @version 1.0.0
 * Table: sqltoy_user_log,Remark:用户日志表  
 */
@Entity(tableName="sqltoy_user_log",pk_constraint="PRIMARY")
public abstract class AbstractUserLogVO implements Serializable,
	java.lang.Cloneable {
	 /*--------------- properties string,handier to copy ---------------------*/
	 //full properties 
	 //logId,userId,terminalIp,deviceCode,logTime,logDate,logType,channel,contents
	 
	 //not null properties
	 //logId,userId,logTime,logDate,logType,channel,contents

	/**
	 * 
	 */
	private static final long serialVersionUID = 6170650195950377389L;
	
	/**
	 * 日志ID
	 */
	@Id(strategy="generator",generator="org.sagacity.sqltoy.plugins.id.DefaultIdGenerator")
	@Column(name="LOG_ID",length=32L,type=java.sql.Types.VARCHAR,nullable=false)
	protected String logId;
	
	/**
	 * 用户ID
	 */
	@Column(name="USER_ID",length=32L,type=java.sql.Types.VARCHAR,nullable=false)
	protected String userId;
	
	/**
	 * 请求IP
	 */
	@Column(name="TERMINAL_IP",length=32L,type=java.sql.Types.VARCHAR,nullable=true)
	protected String terminalIp;
	
	/**
	 * 设备号
	 */
	@Column(name="DEVICE_CODE",length=32L,type=java.sql.Types.VARCHAR,nullable=true)
	protected String deviceCode;
	
	/**
	 * 日志时间
	 */
	@Column(name="LOG_TIME",length=19L,type=java.sql.Types.DATE,nullable=false)
	protected LocalDateTime logTime;
	
	/**
	 * 日期日期
	 */
	@Column(name="LOG_DATE",length=10L,type=java.sql.Types.DATE,nullable=false)
	protected LocalDate logDate;
	
	/**
	 * 日志类型
	 */
	@Column(name="LOG_TYPE",length=32L,type=java.sql.Types.VARCHAR,nullable=false)
	protected String logType;
	
	/**
	 * 应用渠道
	 */
	@Column(name="CHANNEL",length=32L,type=java.sql.Types.VARCHAR,nullable=false)
	protected String channel;
	
	/**
	 * 日志内容
	 */
	@Column(name="CONTENTS",length=65535L,type=java.sql.Types.VARCHAR,nullable=false)
	protected String contents;
	

	/** default constructor */
	public AbstractUserLogVO() {
	}
	
	/** pk constructor */
	public AbstractUserLogVO(String logId)
	{
		this.logId=logId;
	}

	/** minimal constructor */
	public AbstractUserLogVO(String logId,String userId,LocalDateTime logTime,LocalDate logDate,String logType,String channel,String contents)
	{
		this.logId=logId;
		this.userId=userId;
		this.logTime=logTime;
		this.logDate=logDate;
		this.logType=logType;
		this.channel=channel;
		this.contents=contents;
	}

	/** full constructor */
	public AbstractUserLogVO(String logId,String userId,String terminalIp,String deviceCode,LocalDateTime logTime,LocalDate logDate,String logType,String channel,String contents)
	{
		this.logId=logId;
		this.userId=userId;
		this.terminalIp=terminalIp;
		this.deviceCode=deviceCode;
		this.logTime=logTime;
		this.logDate=logDate;
		this.logType=logType;
		this.channel=channel;
		this.contents=contents;
	}
	
	/**
	 *@param logId the logId to set
	 */
	public AbstractUserLogVO setLogId(String logId) {
		this.logId=logId;
		return this;
	}
		
	/**
	 *@return the LogId
	 */
	public String getLogId() {
	    return this.logId;
	}
	
	/**
	 *@param userId the userId to set
	 */
	public AbstractUserLogVO setUserId(String userId) {
		this.userId=userId;
		return this;
	}
		
	/**
	 *@return the UserId
	 */
	public String getUserId() {
	    return this.userId;
	}
	
	/**
	 *@param terminalIp the terminalIp to set
	 */
	public AbstractUserLogVO setTerminalIp(String terminalIp) {
		this.terminalIp=terminalIp;
		return this;
	}
		
	/**
	 *@return the TerminalIp
	 */
	public String getTerminalIp() {
	    return this.terminalIp;
	}
	
	/**
	 *@param deviceCode the deviceCode to set
	 */
	public AbstractUserLogVO setDeviceCode(String deviceCode) {
		this.deviceCode=deviceCode;
		return this;
	}
		
	/**
	 *@return the DeviceCode
	 */
	public String getDeviceCode() {
	    return this.deviceCode;
	}
	
	/**
	 *@param logTime the logTime to set
	 */
	public AbstractUserLogVO setLogTime(LocalDateTime logTime) {
		this.logTime=logTime;
		return this;
	}
		
	/**
	 *@return the LogTime
	 */
	public LocalDateTime getLogTime() {
	    return this.logTime;
	}
	
	/**
	 *@param logDate the logDate to set
	 */
	public AbstractUserLogVO setLogDate(LocalDate logDate) {
		this.logDate=logDate;
		return this;
	}
		
	/**
	 *@return the LogDate
	 */
	public LocalDate getLogDate() {
	    return this.logDate;
	}
	
	/**
	 *@param logType the logType to set
	 */
	public AbstractUserLogVO setLogType(String logType) {
		this.logType=logType;
		return this;
	}
		
	/**
	 *@return the LogType
	 */
	public String getLogType() {
	    return this.logType;
	}
	
	/**
	 *@param channel the channel to set
	 */
	public AbstractUserLogVO setChannel(String channel) {
		this.channel=channel;
		return this;
	}
		
	/**
	 *@return the Channel
	 */
	public String getChannel() {
	    return this.channel;
	}
	
	/**
	 *@param contents the contents to set
	 */
	public AbstractUserLogVO setContents(String contents) {
		this.contents=contents;
		return this;
	}
		
	/**
	 *@return the Contents
	 */
	public String getContents() {
	    return this.contents;
	}



	/**
     * @todo vo columns to String
     */
    @Override
	public String toString() {
		StringBuilder columnsBuffer=new StringBuilder();
		columnsBuffer.append("logId=").append(getLogId()).append("\n");
		columnsBuffer.append("userId=").append(getUserId()).append("\n");
		columnsBuffer.append("terminalIp=").append(getTerminalIp()).append("\n");
		columnsBuffer.append("deviceCode=").append(getDeviceCode()).append("\n");
		columnsBuffer.append("logTime=").append(getLogTime()).append("\n");
		columnsBuffer.append("logDate=").append(getLogDate()).append("\n");
		columnsBuffer.append("logType=").append(getLogType()).append("\n");
		columnsBuffer.append("channel=").append(getChannel()).append("\n");
		columnsBuffer.append("contents=").append(getContents()).append("\n");
		return columnsBuffer.toString();
	}
}
